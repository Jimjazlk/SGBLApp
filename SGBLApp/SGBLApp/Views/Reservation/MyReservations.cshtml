@using SGBLApp.Core.Domain.Enum
@model IEnumerable<SGBLApp.Core.Application.DTOs.Reservation.ReservationDto>
@{
    ViewData["Title"] = "Reservas";
}

<div class="container mt-4">
    <header class="mb-4">
        <h2 class="text-center">@ViewData["Title"]</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    </header>

    @if (Model.Any())
    {
        <div class="row g-4">
            @foreach (var reservation in Model)
            {
                <div class="col-md-6">
                    <div class="card border-0 shadow-sm">
                        <div class="card-header @GetStatusBackground(reservation.Status) text-white">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-book me-2"></i>
                                @reservation.BookTitle.ToUpper()
                            </h5>
                        </div>

                        <div class="card-body text-white">
                            <div class="row align-items-center">
                                <div class="col-md-8">
                                    <ul class="list-unstyled mb-0">
                                        <li class="mb-2">
                                            <i class="far fa-calendar-alt me-2"></i>
                                            <strong>Fecha:</strong> @reservation.ReservationDate.ToString("dd/MM/yyyy")
                                        </li>
                                        <li class="mb-2">
                                            <i class="fas fa-info-circle me-2"></i>
                                            <strong>Estado:</strong> @reservation.Status
                                        </li>
                                        @if (reservation.ExpirationDate != null)
                                        {
                                            <li>
                                                <i class="far fa-clock me-2"></i>
                                                <strong>Válido hasta:</strong> @reservation.ExpirationDate?.ToString("dd/MM/yyyy")
                                            </li>
                                        }
                                    </ul>
                                </div>

                                <div class="col-md-4 text-end">
                                    @if (reservation.Status == ReservationStatus.Pendiente ||
                                   reservation.Status == ReservationStatus.Disponible)
                                    {
                                        <form asp-action="Cancel" method="post" class="d-inline">
                                            <input type="hidden" name="id" value="@reservation.ReservationId" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="fas fa-times-circle me-1"></i> Cancelar
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info text-center">
            <i class="fas fa-info-circle me-2"></i>
            No tienes reservas activas
        </div>
    }
</div>

@functions {
    string GetStatusBackground(ReservationStatus status)
    {
        return status switch
        {
            ReservationStatus.Pendiente => "bg-warning",
            ReservationStatus.Disponible => "bg-success",
            _ => "bg-secondary"
        };
    }
}